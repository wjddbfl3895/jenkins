# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ] #main 브랜치에 push가 발생 했을때 동작(트리거)

jobs:
  build:

    runs-on: ubuntu-latest #GitHub Action에서 실행할 운영체제

    steps:
    - uses: actions/checkout@v4 # 레파지토리 코드를 checkout
    - name: Set up JDK 17
      uses: actions/setup-java@v4 # JDK17 설치
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven #Maven 의존성 캐시 활성화
    - name: Build with Maven
      run: mvn clean install -DskipTests -f ./SpringProjectJenkins/pom.xml # 빌드 및 의존성 설치 (테스트는 건너뛰기)
    
    - name: Deploy to Tomcat Server #Tomcat서버에 WAR파일 배포()
      run: mvn tomcat:deploy -DskipTests -f ./SpringProjectForJenkins/pom.xml || mvn tomcat:redeploy -DskipTests -f ./SpringProjectForJenkins/pom.xml
